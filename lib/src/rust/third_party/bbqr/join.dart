// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'encode.dart';
import 'file_type.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `JoinError`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `clone`, `eq`, `eq`, `fmt`, `fmt`, `fmt`, `from`, `from`, `source`

/// Joined data structure, includes the encoding, file type, and raw data in bytes
class Joined {
  /// Encoding that was used in the QR codes, all parts must have the same encoding
  /// The encoding is used to decode the data, and its stated in the header of each split part
  final Encoding encoding;

  /// File type that was used in the QR codes, all parts must have the same file type
  /// The file type is determined by the header
  final FileType fileType;

  /// The data that was encoded in the QR codes
  final Uint8List data;

  const Joined({
    required this.encoding,
    required this.fileType,
    required this.data,
  });

  static Future<Joined> tryFromParts({required List<String> parts}) =>
      LibBbqr.instance.api.bbqrJoinJoinedFrbOverrideTryFromParts(parts: parts);

  @override
  int get hashCode => encoding.hashCode ^ fileType.hashCode ^ data.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Joined &&
          runtimeType == other.runtimeType &&
          encoding == other.encoding &&
          fileType == other.fileType &&
          data == other.data;
}
